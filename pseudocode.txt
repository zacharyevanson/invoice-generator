- Create Class for 'Customer', and adding attributes

- Create Class for 'Restaurant', and adding attributes. Use HashMap to create key value pair for the order items and their prices
- Use Array for orderNum to track the number of each meal ordered
- Use orders and numOrders for method that calculates the total cost (getTotalCost)

- Create Class for 'Driver', including relevant information including city and current order capacity
- Create methods for each attribute of 'Driver', so that they can be retrieved in the Algorithm body

- Create DriverSelector class that iterates through the driver.txt file using a BufferedReader and maps each as an object to the Driver class
- Create getBestDriver method that takes location as a parameter to match the restaurants location, and then filters through driver ordNums
- If no driver is in the given location, return string statement to customer

- Formatting receipt form for each user, implementing method to determine which driver is most available by using City and OrderCapacity attributes
- Importing all additional info, and then returning it to the user

- Create Algorithm class to run the Main body
- Intialize numOrders and orderrs for Customer object declaration
- Create objects for both Customer and Restaurant classes

- Create replica invoice with all relevant information, including any special requests



